#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

echo "running compile"

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_start"

VERTX_VERSION=1.3.1.final
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2
LOGGER_FLAGS=""

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

# create default system.properties for apps that had the jdk vendored in 
if [ -f ${CACHE_DIR}/.jdk/vendor ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  echo "java.runtime.version=1.7" > ${BUILD_DIR}/system.properties
fi

if [ -f ${CACHE_DIR}/system.properties ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  cp ${CACHE_DIR}/system.properties ${BUILD_DIR}/system.properties
fi

if [ ! -d $CACHE_DIR ]; then
  LOGGER_FLAGS="$LOGGER_FLAGS new_java_app"
  logger -p user.notice -t "slugc[$$]" "language_pack_java new_java_app"
  if [ ! -f ${BUILD_DIR}/system.properties ]; then 
    echo "java.runtime.version=1.7" > ${BUILD_DIR}/system.properties; 
  fi
fi

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# install JDK 
if [ -f ${BUILD_DIR}/system.properties ]; then
  logger -p user.notice -t "slugc[$$]" "language_pack_java download_jdk"
  LOGGER_FLAGS="$LOGGER_FLAGS download_jdk"
  javaVersion=$(detect_java_version ${BUILD_DIR})
  echo "-----> Installing OpenJDK ${javaVersion}..."
  echo "install_java ${BUILD_DIR} ${javaVersion}"
  install_java ${BUILD_DIR} ${javaVersion}
  echo "done install_java"
  cp ${BUILD_DIR}/system.properties ${CACHE_DIR}/
  echo "done cp to cachedir"
fi


VERTX_URL="http://vert-x.github.io/vertx-downloads/downloads/vert.x-$VERSION.tar.gz"
VERTX_CACHED="$CACHE_DIR/vertx-$VERSION"
VERTX_BUILD_DIR="$BUILD_DIR/.vertx"

echo "CACHE_DIR=$CACHE_DIR"

if [ -d $VERTX_CACHED ]; then
  echo -n "copying vertx to app instead of downloading"
  cp -r $VERTX_CACHED $VERTX_BUILD_DIR
  echo "done"
fi

if [ ! -d $VERTX_BUILD_DIR ]; then
  #clean out old versions
  rm -r "$CACHE_DIR/vertx*"
  cd $BUILD_DIR
  echo "-----> Installing Vert.x build (to .vertx)..... from $VERTX_URL"
  curl --max-time 320 --location $VERTX_URL | tar xz
  ls -la
  mv vert* vertx
  rm -r vertx/examples
  rm -r vertx/api-docs
  ls -la
  cp -r vertx $VERTX_CACHED
  cp -r vertx $VERTX_BUILD_DIR
  echo "installed vert.x into CACHE_DIR=$VERTX_CACHED and copied into BUILD_DIR=$VERTX_BUILD_DIR"
  ls -la $BUILD_DIR
fi


echo "finishing compile"

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_end $LOGGER_FLAGS"

echo "finished compile"
